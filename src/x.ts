import * as vscode from 'vscode';
import { exec, ExecException } from 'child_process';
import { PytestFactory } from './utils/pytestBuilder';

export function trackTests(panel: vscode.WebviewPanel): void {
    const builder = new PytestFactory();
    const command = builder.createCommand(); // Use the full command generated by PytestFactory

    // Get the workspace folder
    const workspaceFolder = vscode.workspace.workspaceFolders?.[0]?.uri.fsPath;
    if (!workspaceFolder) {
        vscode.window.showErrorMessage('No workspace folder is open.');
        return;
    }

    // Notify the user that the tests have started
    updateView(panel, 'Test Running');

    // Run the command in the workspace folder
    const process = exec(command, { cwd: workspaceFolder }, (error: ExecException | null, stdout: string | Buffer, stderr: string | Buffer) => {
        if (error) {
            console.error(`Error: ${error.message}`);
            updateView(panel, 'Test Error');
            return;
        }
        if (stderr) {
            console.error(`Stderr: ${stderr.toString()}`);
            updateView(panel, 'Test Failed');
            return;
        }
        console.log(`Stdout: ${stdout.toString()}`);
        updateView(panel, 'Tests Passed');
    });

    // Create a new output channel to display the results
    const outputChannel = vscode.window.createOutputChannel('Pytest Output');
    outputChannel.show();

    process.stdout?.on('data', (data: string) => {
        // Output the data to the output channel
        outputChannel.append(data.toString());
    });

    process.stderr?.on('data', (data: string) => {
        // Output the error data to the output channel
        outputChannel.append(data.toString());
    });

    process.on('close', (code: number) => {
        console.log(`Process closed with code ${code}`);
        updateView(panel, 'Test Completed');
    });
}

function updateView(panel: vscode.WebviewPanel, status: string): void {
    panel.webview.postMessage({ command: 'updateStatus', status: status });
}
